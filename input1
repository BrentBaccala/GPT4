include(common)

Never use fmpz_mpoly_init_set!

flint_printf does not take an initial FILE * argument.

Construct the i'th term in a polynomial by making
a copy of the polynomial, truncating it to discard
the first i-1 terms, then constructing the leading term.

Function reduce_by_vector first logs its input/output polynomial,
then constructs the leading term of the input/output polynomial,
then loops over its input vector of polynomials, and for each polynomial in the vector,
constructs the leading term of the polynomial in the vector,
and does one of two things, depending on the lead reduction flag.

If lead reduction is true, the function
checks the leading term of the polynomial in the vector to
see if it divides the leading term of the input/output polynomial.
If so, this is the only matching term.  Log the matching term.  Otherwise, there are no matching terms.

If lead reduction is false, the function
loops over all of the terms in the input/output polynomial
and checks each one to see if the leading term of the polynomial
in the vector divides that term.  These are the matching terms.
If there are any matching terms, log all of them.

If there are any matching terms, then for each one,
multiply the polynomial from the vector by the GCD
of its leading term and the matching term of the input/output polynomial,
then subtract that result from the input/output polynomial.

If we're doing lead reduction, recompute the leading term of the input/output polynomial and check it again
against all of the polynomials in the vector.  If we're not doing lead reduction, then it's enough to
do the multiply-by-GCD-and-subtract step once for each matching term in the input/output polynomial.
In either case, break out of this loop if the result ever becomes zero.

Log the result of the reduction before returning.

Make sure that reduce_by_vector prints those logging messages when it starts and before it returns.

Output the header, any required function declarations, the code for reduce_by_vector, and nothing else, without any explaination.
