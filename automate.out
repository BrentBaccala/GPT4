#!/usr/bin/env python3
import sys
import argparse
import getpass
import pyperclip
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait

parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument("-q", "--query", help="user query")
group.add_argument("-f", "--file", help="filename containing the user query")
parser.add_argument("-n", "--name", help="name of the chatbot", required=True)
parser.add_argument("-o", "--output", help="output file name")
parser.add_argument("-h", "--headed", help="operate Selenium headed", action="store_true")
args = parser.parse_args()

user_query = args.query if args.query else open(args.file, "r").read()

options = Options()
if not args.headed:
    options.add_argument("--headless")

driver = webdriver.Firefox(options=options)
wait = WebDriverWait(driver, 10)

driver.get("https://poe.com/")
wait.until(EC.frame_to_be_available_and_switch_to_it((By.CSS_SELECTOR, 'iframe[title="Sign in with Google Dialog"]')))
wait.until(EC.element_to_be_clickable((By.ID, "continue"))).click()

wait.until(EC.number_of_windows_to_be(2))
signin_window = [window for window in driver.window_handles if window != driver.current_window_handle][0]
driver.switch_to.window(signin_window)

email_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="email"]')))
email_input.send_keys("cosine@freesoft.org")
email_input.send_keys(Keys.ENTER)

password = getpass.getpass(prompt="Password: ", stream=None)
password_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="password"]')))
password_input.send_keys(password)
password_input.send_keys(Keys.ENTER)

wait.until(EC.number_of_windows_to_be(1))
driver.switch_to.window(driver.window_handles[0])

chatbot_name = args.name
wait.until(EC.element_to_be_clickable((By.XPATH, f'//p[contains(text(), "{chatbot_name}")]'))).click()

entry_box = wait.until(EC.presence_of_element_located((By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]')))
send_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/button')
clear_context_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/parent::div/button')

clear_context_button.click()
entry_box.send_keys(user_query)
send_button.click()

wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) == 'not-allowed')
wait_five_minutes = WebDriverWait(driver, 300)
wait_five_minutes.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) != 'not-allowed')

copy_buttons = driver.find_elements(By.XPATH, '//button[contains(., "Copy")]')
last_copy_button = copy_buttons[-1]
wait.until(EC.element_to_be_clickable((last_copy_button))).click()

response = pyperclip.paste()

if args.output:
    with open(args.output, "w") as output_file:
        output_file.write(response)
else:
    print(response)

driver.quit()
