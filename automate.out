#!/usr/bin/env python3
import argparse
import getpass
import sys
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import pyperclip

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-q", dest="query", help="User query")
    parser.add_argument("-f", dest="file", help="Read query from file")
    parser.add_argument("-o", dest="output", help="Output file")
    args = parser.parse_args()

    if args.file:
        with open(args.file, 'r') as f:
            query = f.read().strip()
    elif args.query:
        query = args.query
    else:
        print("Usage: script.py [-q QUERY | -f FILE] [-o OUTPUT]")
        sys.exit(1)

    driver = webdriver.Firefox()
    driver.get("https://poe.com/")

    WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="Sign in with Google Dialog"]')))
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "continue"))).click()

    WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))
    signin_window = [window for window in driver.window_handles if window != driver.current_window_handle][0]
    driver.switch_to.window(signin_window)

    email_input = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[type="email"]')))
    email_input.send_keys("cosine@freesoft.org")
    email_input.send_keys(Keys.RETURN)

    password = getpass.getpass(prompt="Password: ", stream=None)
    password_input = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[type="password"]')))
    password_input.send_keys(password)
    password_input.send_keys(Keys.RETURN)

    WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(1))
    driver.switch_to.window(driver.window_handles[0])

    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//p[contains(text(), "ChatGPT")]'))).click()
    entry_box = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//textarea[@placeholder="Talk to ChatGPT on Poe"]')))

    send_button = driver.find_element(By.XPATH, '//textarea[@placeholder="Talk to ChatGPT on Poe"]/parent::div/parent::div/button')
    clear_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//textarea[@placeholder="Talk to ChatGPT on Poe"]/parent::div/parent::div/following-sibling::button')))
    clear_button.click()

    entry_box.send_keys(query)
    send_button.click()

    time.sleep(1)
    wait = WebDriverWait(driver, 10)
    wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) != 'not-allowed')

    copy_buttons = driver.find_elements(By.XPATH, '//button[contains(., "Copy")]')
    last_copy_button = copy_buttons[-1]
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(last_copy_button)).click()

    clipboard_text = pyperclip.paste()

    if args.output:
        with open(args.output, 'w') as f:
            f.write(clipboard_text)
    else:
        print(clipboard_text)

    driver.quit()

if __name__ == "__main__":
    main()
