#!/usr/bin/env python3
import sys
import argparse
import getpass
import pyperclip
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.firefox.options import Options

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-q', type=str, help='User query')
    parser.add_argument('-f', type=str, help='File name')
    parser.add_argument('-n', type=str, required=True, help='Chatbot name')
    parser.add_argument('-o', type=str, help='Output file name')
    parser.add_argument('--headed', action='store_true', help='Operate Selenium headed')
    args = parser.parse_args()

    if not args.q and not args.f:
        print("Usage: script.py -q <query> -n <chatbot_name> [-o <output_file_name>] [--headed]")
        sys.exit()

    query = args.q if args.q else open(args.f).read().strip()

    firefox_options = Options()
    if not args.headed:
        firefox_options.add_argument('--headless')

    driver = webdriver.Firefox(options=firefox_options)
    wait = WebDriverWait(driver, 10)

    driver.get("https://poe.com/")
    wait.until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="Sign in with Google Dialog"]')))
    wait.until(EC.element_to_be_clickable((By.ID, 'continue'))).click()
    driver.switch_to.default_content()

    wait.until(EC.number_of_windows_to_be(2))
    signin_window = [window for window in driver.window_handles if window != driver.current_window_handle][0]
    driver.switch_to.window(signin_window)

    email_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="email"]')))
    email_input.send_keys("cosine@freesoft.org")
    email_input.send_keys(Keys.ENTER)

    password = getpass.getpass(prompt='Password: ', stream=None)
    password_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="password"]')))
    password_input.send_keys(password)
    password_input.send_keys(Keys.ENTER)

    wait.until(EC.number_of_windows_to_be(1))
    driver.switch_to.window(driver.window_handles[0])

    chatbot_name = args.n
    wait.until(EC.element_to_be_clickable((By.XPATH, f'//p[contains(text(), "{chatbot_name}")]'))).click()

    entry_box = wait.until(EC.presence_of_element_located((By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]')))

    send_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/button')
    clear_context_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/parent::div/button')

    clear_context_button.click()

    entry_box.send_keys(query)
    send_button.click()

    long_wait = WebDriverWait(driver, 300)
    long_wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) == 'not-allowed')
    wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) != 'not-allowed')

    copy_buttons = driver.find_elements(By.XPATH, '//button[contains(., "Copy")]')
    last_copy_button = copy_buttons[-1]
    last_copy_button.click()

    response = pyperclip.paste()

    if args.o:
        with open(args.o, 'w') as output_file:
            output_file.write(response)
    else:
        print(response)

    driver.quit()

if __name__ == '__main__':
    main()
