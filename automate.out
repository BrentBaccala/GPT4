#!/usr/bin/env python3

import sys
import getpass
import argparse
import pyperclip
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

parser = argparse.ArgumentParser(description="Interact with a chatbot on poe.com")
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument("-q", "--query", help="The query to send to the chatbot")
group.add_argument("-f", "--file", help="A file containing the query to send to the chatbot")
parser.add_argument("-n", "--name", required=True, help="The name of the chatbot")
parser.add_argument("-o", "--output", help="The output file to save the chatbot response")
parser.add_argument("--headed", action="store_true", help="Run Selenium in headed mode")

args = parser.parse_args()

options = Options()
if not args.headed:
    options.add_argument("--headless")

driver = webdriver.Firefox(options=options)
wait = WebDriverWait(driver, 10)
driver.get("https://poe.com/")

wait.until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="Sign in with Google Dialog"]')))
wait.until(EC.element_to_be_clickable((By.ID, "continue"))).click()

wait.until(EC.number_of_windows_to_be(2))
signin_window = [window for window in driver.window_handles if window != driver.current_window_handle][0]
driver.switch_to.window(signin_window)

email_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="email"]')))
email_input.send_keys("cosine@freesoft.org")
email_input.send_keys(Keys.RETURN)

password = getpass.getpass("Enter password: ")
password_input = wait.until(EC.element_to_be_clickable((By.XPATH, '//input[@type="password" and @name="Passwd"]')))
password_input.send_keys(password)
password_input.send_keys(Keys.RETURN)

wait.until(EC.number_of_windows_to_be(1))
driver.switch_to.window(driver.window_handles[0])

chatbot_name = args.name
WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//p[contains(text(), "{chatbot_name}")]'))).click()

entry_box = wait.until(EC.presence_of_element_located((By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]')))
send_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/button')
clear_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/parent::div/button')

clear_button.click()

user_query = args.query if args.query else open(args.file).read().strip()
entry_box.send_keys(user_query)
send_button.click()

wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) == 'not-allowed')
WebDriverWait(driver, 300).until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) != 'not-allowed')

copy_buttons = driver.find_elements(By.XPATH, '//button[contains(., "Copy")]')
last_copy_button = copy_buttons[-1]
wait.until(EC.element_to_be_clickable(last_copy_button)).click()

response = pyperclip.paste()

if args.output:
    with open(args.output, "w") as f:
        f.write(response)
else:
    print(response)

driver.quit()
