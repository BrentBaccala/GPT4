#!/usr/bin/env python3

import sys
import argparse
import time
import getpass
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pyperclip

def main(args):
    parser = argparse.ArgumentParser()
    parser.add_argument('-q', '--query', help='User query')
    parser.add_argument('-f', '--file', help='File containing user query')
    parser.add_argument('-o', '--output', help='Output file name')
    options = parser.parse_args(args)

    if not options.query and not options.file:
        parser.print_help()
        sys.exit()

    if options.file:
        with open(options.file, 'r') as f:
            user_query = f.read().strip()
    else:
        user_query = options.query

    driver = webdriver.Firefox()

    driver.get('https://poe.com/')
    WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="Sign in with Google Dialog"]')))
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, 'continue'))).click()

    WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))
    signin_window = [window for window in driver.window_handles if window != driver.current_window_handle][0]
    driver.switch_to.window(signin_window)

    email_input = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[type="email"]')))
    email_input.send_keys('cosine@freesoft.org')
    email_input.send_keys(Keys.ENTER)

    password = getpass.getpass("Enter your password: ")

    password_input = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.NAME, 'Passwd')))
    password_input.send_keys(password)
    password_input.send_keys(Keys.ENTER)

    WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(1))

    if driver.title == 'Sign in - Google Accounts':
        print('Bad password')
        sys.exit()

    driver.switch_to.window(driver.window_handles[0])

    chatbot_name = "ChatGPT"
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//p[contains(text(), "{chatbot_name}")]'))).click()

    entry_box = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]')))
    send_button = driver.find_element(By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/button')
    clear_context_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//textarea[@placeholder="Talk to {chatbot_name} on Poe"]/parent::div/parent::div/following-sibling::button')))
    clear_context_button.click()

    entry_box.send_keys(user_query)
    send_button.click()

    time.sleep(1)
    wait = WebDriverWait(driver, 10)
    wait.until(lambda driver: driver.execute_script('return getComputedStyle(arguments[0]).cursor;', send_button) != 'not-allowed')

    copy_buttons = driver.find_elements(By.XPATH, '//button[contains(., "Copy")]')
    last_copy_button = copy_buttons[-1]
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(last_copy_button)).click()

    response_text = pyperclip.paste()

    if options.output:
        with open(options.output, 'w') as output_file:
            output_file.write(response_text)
    else:
        print(response_text)

    driver.quit()

if __name__ == '__main__':
    main(sys.argv[1:])
